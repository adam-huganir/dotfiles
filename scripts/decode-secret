#! /usr/bin/env python3

import argparse
import base64
import json
import sys

parser = argparse.ArgumentParser()
parser.add_argument("--indent", "-i", help="Indent level for JSON output", type=int, nargs="?", default=2)
parser.add_argument("--data-only", "-d", help="Only print the data field", action="store_true")
parser.add_argument("--yaml", help="Read input and youtput as yaml", action="store_true")
parser.add_argument("--yaml-input", help="Read input as yaml", action="store_true")
parser.add_argument("--yaml-output", help="Print output as yaml", action="store_true")
args = parser.parse_args()

def decode(string):
    return base64.decodebytes(string.encode()).decode()


if args.yaml or args.yaml_input:
    try:
        import yaml
    except ImportError:
        print("PyYAML is required for yaml support")
        sys.exit(1)
    secret = yaml.safe_load(sys.stdin)
else:
    secret = json.loads(sys.stdin.read())

for key, value in secret["data"].items():
    secret["data"][key] = decode(str(value))

if args.data_only:
    if args.yaml or args.yaml_output:
        try:
            import yaml
        except ImportError:
            print("PyYAML is required for yaml support")
            sys.exit(1)
        print(yaml.safe_dump(secret["data"], indent=args.indent))
    else:
        print(json.dumps(secret["data"], indent=args.indent))

elif args.yaml or args.yaml_output:
    try:
        import yaml
    except ImportError:
        print("PyYAML is required for yaml support")
        sys.exit(1)
    print(yaml.safe_dump(secret, indent=args.indent))
else:
    print(json.dumps(secret, indent=args.indent))
